name: CI
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  build:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Build local image
        run: docker build -f Dockerfile -t taxibeat/bake:latest . --build-arg GH_TOKEN=${{ secrets.MATCHING_GITHUBTOKEN }}
        shell: bash

      - name: Bake CI
        run: ./bake.sh ci:run
        env:
          COVERALLS_TOKEN: ${{ secrets.COVERALLSTOKEN }}
          GITHUB_TOKEN: ${{ secrets.MATCHING_GITHUBTOKEN }}

      - name: Convert coverage file to lcov
        run: |
          GO111MODULE=off go get -u github.com/jandelgado/gcov2lcov
          $(go env GOPATH)/bin/gcov2lcov -infile=coverage.txt -outfile=coverage.lcov

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./coverage.lcov

      - name: Notify slack success
        if: success()
        env:
          SLACK_USERNAME: matching-ci-bot
          SLACK_WEBHOOK: ${{ secrets.MATCHING_CI_SLACK_WEBHOOK }}
          SLACK_MESSAGE: 'Success :rocket:'
          SLACK_TITLE: ${{ github.repository }} CI run
          SLACK_COLOR: good
          SLACK_FOOTER: Powered by the Matching Domain
        uses: rtCamp/action-slack-notify@v2
      - name: Notify slack fail
        if: failure()
        env:
          SLACK_USERNAME: matching-ci-bot
          SLACK_WEBHOOK: ${{ secrets.MATCHING_CI_SLACK_WEBHOOK }}
          SLACK_MESSAGE: 'Failure :facepalm1:'
          SLACK_TITLE: ${{ github.repository }} CI run
          SLACK_COLOR: danger
          SLACK_FOOTER: Powered by the Matching Domain
        uses: rtCamp/action-slack-notify@v2
